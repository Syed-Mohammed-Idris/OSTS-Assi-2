#!/bin/bash

# Function to clean each file
clean_file() {
  local file=$1
  
  # Check if the file is tab-separated
  if ! head -n 1 "$file" | grep -q $'\t'; then
    echo "Error: $file is not a tab-separated file."
    return 1
  fi
  
  # Get the header and determine the number of columns
  header=$(head -n 1 "$file")
  num_columns=$(echo "$header" | awk -F'\t' '{print NF}')
  
  # Check for lines with an incorrect number of cells
  awk -F'\t' -v cols=$num_columns 'NR==1 {next} NF != cols {print "Incorrect number of cells in line " NR ": " $0}' "$file"
  
  # Remove 'Continent' column and filter rows
  awk -F'\t' -v OFS='\t' '
    NR == 1 {
      for (i=1; i<=NF; i++) {
        if ($i == "Continent") continent_col = i
        else headers[i] = $i
      }
      next
    }
    $2 != "" && $3 >= 2011 && $3 <= 2021 {
      if (continent_col) {
        for (i=1; i<=NF; i++) {
          if (i != continent_col) printf "%s%s", $i, (i==NF || (continent_col && i==NF-1) ? ORS : OFS)
        }
      } else {
        print $0
      }
    }
  ' "$file"
}

# Temporary files for cleaned data
gdp_file=$(mktemp)
homicide_file=$(mktemp)
life_exp_file=$(mktemp)

# Clean each file and store in temporary files
for file in "$@"; do
  case "$file" in
    *gdp-vs-happiness*)
      clean_file "$file" > "$gdp_file"
      ;;
    *homicide-rate-unodc*)
      clean_file "$file" > "$homicide_file"
      ;;
    *life-satisfaction-vs-life-expectancy*)
      clean_file "$file" > "$life_exp_file"
      ;;
  esac
done

# Combine and format the cleaned data, removing rows with missing values in columns except for 'Cantril ladder score'
{
  # Print header
  echo -e "Entity\tCode\tYear\tGDP per capita, PPP (constant 2017 international $)\tPopulation (historical estimates)\tHomicide rate per 100,000 population - Both sexes - All ages\tLife expectancy - Sex: all - Age: at birth - Variant: estimates\tCantril ladder score"

  # Process data from temporary files
  awk -F'\t' -v OFS='\t' '
    FNR == 1 { next }
    {
      if (FILENAME == gdp_file) {
        country_code[$1] = $2
        gdp[$1, $3] = $5
        population[$1, $3] = $6
        cantril_gdp[$1, $3] = $4
      } else if (FILENAME == homicide_file) {
        homicide[$1, $3] = $4
      } else if (FILENAME == life_exp_file) {
        life_exp[$1, $3] = $4
        cantril_life[$1, $3] = $5
      }
    }
    END {
      for (key in gdp) {
        split(key, k, SUBSEP)
        country = k[1]
        year = k[2]
        cantril_score = (cantril_life[country, year] != "" ? cantril_life[country, year] : cantril_gdp[country, year])
        if (gdp[country, year] != "" && population[country, year] != "" && homicide[country, year] != "" && life_exp[country, year] != "") {
          print country, country_code[country], year, gdp[country, year], population[country, year], homicide[country, year], life_exp[country, year], cantril_score
        }
      }
    }
  ' gdp_file="$gdp_file" homicide_file="$homicide_file" life_exp_file="$life_exp_file" "$gdp_file" "$homicide_file" "$life_exp_file" | sort
}

# Clean up temporary files
rm "$gdp_file" "$homicide_file" "$life_exp_file"
